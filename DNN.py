# -*- coding: utf-8 -*-
"""DNN_model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1srmAUa69CrgxrTaMMeOEQJLehjW_4iZs
"""

from torch import nn
import torch.nn.functional as F
class DNNModel(nn.Module):

    def __init__(self, in_channel, out_channel):
        super(DNNModel, self).__init__()
        self.net = nn.Sequential(
            nn.Linear(in_channel, 64),
            nn.ReLU(),
            nn.Linear(64, 128),
            nn.ReLU(),
            nn.Linear(128, out_channel)
        )

    def forward(self, x):
        x = self.net(x.float())
        return x

    def predict(self, x):
        x = F.softmax(self.forward(x), dim=1)
        return x